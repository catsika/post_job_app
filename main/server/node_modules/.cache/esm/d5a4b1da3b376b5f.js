let bcrypt;_3b3‍.x([["hashPassword",()=>hashPassword],["comparePassword",()=>comparePassword]]);_3b3‍.w("bcrypt",[["default",["bcrypt"],function(v){bcrypt=v}]]);

       const hashPassword = (plainPassword) => {
  const password = plainPassword.toString();
  return new Promise((resolve, reject) => {
    bcrypt.genSalt(12, (err, salt) => {
        if (err) {
          reject(err);
        }
        bcrypt.hash(password, salt, (err, hash) => {
          if (err) {
            reject(err);
          }
          resolve(hash);
        });
      });
    });
  };
  
       const comparePassword = (password, hashedPassword) => {
    return bcrypt.compare(password, hashedPassword);
  };